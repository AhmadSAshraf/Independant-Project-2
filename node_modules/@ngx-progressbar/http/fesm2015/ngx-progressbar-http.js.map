{"version":3,"file":"ngx-progressbar-http.js.map","sources":["ng://@ngx-progressbar/http/lib/ng-progress-http.interface.ts","ng://@ngx-progressbar/http/lib/ng-progress.interceptor.ts","ng://@ngx-progressbar/http/lib/ng-progress-http.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgProgressHttpConfig {\r\n  id?: string;\r\n  silentApis?: string[];\r\n}\r\n\r\nexport const NG_PROGRESS_HTTP_CONFIG = new InjectionToken<NgProgressHttpConfig>('ngProgressHttpConfig');\r\n","import { Injectable, Optional, Inject } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NgProgress, NgProgressRef } from '@ngx-progressbar/core';\r\nimport { NgProgressHttpConfig, NG_PROGRESS_HTTP_CONFIG } from './ng-progress-http.interface';\r\n\r\n@Injectable()\r\nexport class NgProgressInterceptor implements HttpInterceptor {\r\n\r\n  private _inProgressCount = 0;\r\n  private _progressRef: NgProgressRef;\r\n  private readonly _config: NgProgressHttpConfig = {\r\n    id: 'root',\r\n    silentApis: []\r\n  };\r\n\r\n  constructor(ngProgress: NgProgress, @Optional() @Inject(NG_PROGRESS_HTTP_CONFIG) config?: NgProgressHttpConfig) {\r\n    this._config = config ? {...this._config, ...config} : this._config;\r\n    this._progressRef = ngProgress.ref(this._config.id);\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    // Ignore by request headers\r\n    if (req.headers.has('ignoreProgressBar')) {\r\n      return next.handle(req.clone({headers: req.headers.delete('ignoreProgressBar')}));\r\n    }\r\n\r\n    // Ignore silent api requests\r\n    if (this.checkUrl(req)) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    this._inProgressCount++;\r\n\r\n    if (!this._progressRef.isStarted) {\r\n      this._progressRef.start();\r\n    }\r\n\r\n    return next.handle(req).pipe(\r\n      finalize(() => {\r\n        this._inProgressCount--;\r\n        if (this._inProgressCount === 0) {\r\n          this._progressRef.complete();\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if request is silent.\r\n   * @param req request\r\n   */\r\n  private checkUrl(req: HttpRequest<any>) {\r\n    const url = req.url.toLowerCase();\r\n    const found = this._config.silentApis.find((u) => url.startsWith(u));\r\n    return !!found;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgProgressInterceptor } from './ng-progress.interceptor';\r\nimport { NgProgressHttpConfig, NG_PROGRESS_HTTP_CONFIG } from './ng-progress-http.interface';\r\n\r\n@NgModule({\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: NgProgressInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class NgProgressHttpModule {\r\n  static withConfig(config: NgProgressHttpConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressHttpModule,\r\n      providers: [\r\n        { provide: NG_PROGRESS_HTTP_CONFIG, useValue: config }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAOA,MAAa,uBAAuB,GAAG,IAAI,cAAc,CAAuB,sBAAsB,CAAC;;;;;;ACPvG,MAQa,qBAAqB;;;;;IAShC,YAAY,UAAsB,EAA+C,MAA6B;QAPtG,qBAAgB,GAAG,CAAC,CAAC;QAEZ,YAAO,GAAyB;YAC/C,EAAE,EAAE,MAAM;YACV,UAAU,EAAE,EAAE;SACf,CAAC;QAGA,IAAI,CAAC,OAAO,GAAG,MAAM,qBAAO,IAAI,CAAC,OAAO,EAAK,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;KACrD;;;;;;IAED,SAAS,CAAC,GAAqB,EAAE,IAAiB;;QAGhD,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAC,CAAC,CAAC,CAAC;SACnF;;QAGD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SACzB;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;SAC3B;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAC1B,QAAQ;;;QAAC;YACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;aAC9B;SACF,EAAC,CACH,CAAC;KACH;;;;;;;IAMO,QAAQ,CAAC,GAAqB;;cAC9B,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE;;cAC3B,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI;;;;QAAC,CAAC,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;QACpE,OAAO,CAAC,CAAC,KAAK,CAAC;KAChB;;;YAnDF,UAAU;;;;YAHF,UAAU;4CAaoB,QAAQ,YAAI,MAAM,SAAC,uBAAuB;;;;;;;ACjBjF,MAUa,oBAAoB;;;;;IAC/B,OAAO,UAAU,CAAC,MAA4B;QAC5C,OAAO;YACL,QAAQ,EAAE,oBAAoB;YAC9B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,uBAAuB,EAAE,QAAQ,EAAE,MAAM,EAAE;aACvD;SACF,CAAC;KACH;;;YAbF,QAAQ,SAAC;gBACR,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;iBAC7E;aACF;;;;;;;;;;;;;;;"}

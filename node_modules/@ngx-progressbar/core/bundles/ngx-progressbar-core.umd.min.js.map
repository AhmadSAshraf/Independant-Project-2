{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-progressbar/core/lib/ng-progress-ref.ts","ng://@ngx-progressbar/core/lib/ng-progress.interface.ts","ng://@ngx-progressbar/core/lib/ng-progress.service.ts","ng://@ngx-progressbar/core/lib/ng-progress.component.ts","ng://@ngx-progressbar/core/lib/ng-progress.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","NgProgressRef","customConfig","_onDestroyCallback","_this","this","_trickling","Subject","_worker","Subscription","EMPTY","_state","BehaviorSubject","active","_config","state","asObservable","config","combineLatest","pipe","debounce","_a","_b","start","timer","debounceTime","switchMap","onTrickling","onComplete","subscribe","defineProperty","currState","map","distinctUntilChanged","filter","skip","complete","inc","amount","isStarted","trickleFunc","set","setState","clamp","setConfig","destroy","unsubscribe","Math","max","min","trickleSpeed","tap","of","delay","speed","NG_PROGRESS_CONFIG","InjectionToken","defaultConfig","fixed","meteor","thick","spinner","ease","color","direction","spinnerPosition","NgProgress","_instances","Map","ref","id","has","progressRef","get","deleteInstance","destroyAll","forEach","delete","Injectable","args","providedIn","Optional","type","Inject","NgProgressComponent","_ngProgress","_started","_completed","started","EventEmitter","completed","ngOnChanges","ngOnInit","state$","transform","observers","emit","ngOnDestroy","Component","selector","host","role","[attr.spinnerPosition]","[attr.dir]","[attr.thick]","[attr.fixed]","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","preserveWhitespaces","Input","Output","NgProgressModule","withConfig","ngModule","providers","provide","useValue","NgModule","declarations","exports","imports","CommonModule"],"mappings":"geA0BO,IAAIA,EAAWC,OAAOC,QAAU,SAAkBC,GACrD,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,GAGX,SA6EgBU,EAAOC,EAAGR,GACtB,IAAIS,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3Bd,EAAIU,EAAEH,KAAKE,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANd,GAAsB,EAANA,QAAcY,EAAIb,EAAEgB,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEI,OAASP,EAAIV,EAAU,YAAIU,EAAEH,KAAKP,WAExC,GAAIc,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,mBC5ET,SAAAM,EAAYC,EAAwCC,GAApD,IAAAC,EAAAC,KAAoDA,KAAAF,mBAAAA,EAlCnCE,KAAAC,WAAa,IAAIC,EAAAA,QAGjBF,KAAAG,QAAUC,EAAAA,aAAaC,MAgCtCL,KAAKM,OAAS,IAAIC,EAAAA,gBAAiC,CAACC,QAAQ,EAAOd,MAAO,IAC1EM,KAAKS,QAAU,IAAIF,EAAAA,gBAAkCV,GACrDG,KAAKU,MAAQV,KAAKM,OAAOK,eACzBX,KAAKY,OAASZ,KAAKM,OAAOK,eAE1BX,KAAKG,QAAUU,EAAAA,cAAcb,KAAKC,WAAYD,KAAKS,SAASK,KAC1DC,EAAAA,SAAQ,SAAEC,OAAAC,EAAAlC,EAAAiC,EAAA,GAACE,EAAAD,EAAA,GAAOL,EAAAK,EAAA,GAAyC,OAAAE,EAAAA,MAAMD,EAAQN,EAAOQ,aAAe,KAC/FC,EAAAA,UAAS,SAAEL,OAAAC,EAAAlC,EAAAiC,EAAA,GAACE,EAAAD,EAAA,GAAOL,EAAAK,EAAA,GAAyC,OAAAC,EAAQnB,EAAKuB,YAAYV,GAAUb,EAAKwB,WAAWX,MAC/GY,YAyGN,OA9IErD,OAAAsD,eAAY7B,EAAAhB,UAAA,YAAS,KAArB,WACE,OAAOoB,KAAKM,OAAOZ,uCAIrBvB,OAAAsD,eAAI7B,EAAAhB,UAAA,YAAS,KAAb,WACE,OAAOoB,KAAK0B,UAAUlB,wCAIxBrC,OAAAsD,eAAI7B,EAAAhB,UAAA,UAAO,KAAX,WACE,OAAOoB,KAAKM,OAAOQ,KACjBa,EAAAA,IAAG,SAAEjB,GAA2B,OAAAA,EAAMF,SACtCoB,EAAAA,uBACAC,EAAAA,OAAM,SAACrB,GAAU,OAAAA,sCAKrBrC,OAAAsD,eAAI7B,EAAAhB,UAAA,YAAS,KAAb,WACE,OAAOoB,KAAKM,OAAOQ,KACjBa,EAAAA,IAAG,SAAEjB,GAA2B,OAAAA,EAAMF,SACtCoB,EAAAA,uBACAC,EAAAA,OAAM,SAACrB,GAAU,OAACA,IAClBsB,EAAAA,KAAK,qCAmBTlC,EAAAhB,UAAAsC,MAAA,WACElB,KAAKC,WAAWV,MAAK,IAMvBK,EAAAhB,UAAAmD,SAAA,WACE/B,KAAKC,WAAWV,MAAK,IAOvBK,EAAAhB,UAAAoD,IAAA,SAAIC,OACIzD,EAAIwB,KAAK0B,UAAUhC,MACpBM,KAAKkC,WAGc,iBAAXD,IACTA,EAASjC,KAAKS,QAAQf,MAAMyC,YAAY3D,IAE1CwB,KAAKoC,IAAI5D,EAAIyD,IALbjC,KAAKkB,SAaTtB,EAAAhB,UAAAwD,IAAA,SAAI5D,GACFwB,KAAKqC,SAAS,CAAC3C,MAAOM,KAAKsC,MAAM9D,GAAIgC,QAAQ,KAO/CZ,EAAAhB,UAAA2D,UAAA,SAAU3B,GACRZ,KAAKS,QAAQlB,KAAIrB,EAAA,GAAK8B,KAAKS,QAAQf,MAAUkB,KAM/ChB,EAAAhB,UAAA4D,QAAA,WACExC,KAAKG,QAAQsC,cACbzC,KAAKC,WAAW8B,WAChB/B,KAAKM,OAAOyB,WACZ/B,KAAKS,QAAQsB,WACb/B,KAAKF,sBAOCF,EAAAhB,UAAAyD,SAAR,SAAiB3B,GACfV,KAAKM,OAAOf,KAAIrB,EAAA,GAAK8B,KAAK0B,UAAchB,KAOlCd,EAAAhB,UAAA0D,MAAR,SAAc9D,GACZ,OAAOkE,KAAKC,IAAI3C,KAAKS,QAAQf,MAAMkD,IAAKF,KAAKE,IAAI5C,KAAKS,QAAQf,MAAMiD,IAAKnE,KAOnEoB,EAAAhB,UAAA0C,YAAR,SAAoBV,GAApB,IAAAb,EAAAC,KAIE,OAHKA,KAAKkC,WACRlC,KAAKoC,IAAIpC,KAAKS,QAAQf,MAAMkD,KAEvBzB,EAAAA,MAAM,EAAGP,EAAOiC,cAAc/B,KAAKgC,EAAAA,IAAG,WAAO,OAAA/C,EAAKiC,UAOnDpC,EAAAhB,UAAA2C,WAAR,SAAmBX,GAAnB,IAAAb,EAAAC,KACE,OAAQA,KAAKkC,UAAqBa,EAAAA,GAAG,IAAIjC,KAEvCgC,EAAAA,IAAG,WAAO,OAAA/C,EAAKsC,SAAS,CAAC3C,MAAO,QAGhCsD,EAAAA,MAAqB,IAAfpC,EAAOqC,OACbH,EAAAA,IAAG,WAAO,OAAA/C,EAAKsC,SAAS,CAAC7B,QAAQ,MAGjCwC,EAAAA,MAAMpC,EAAOqC,OACbH,EAAAA,IAAG,WAAO,OAAA/C,EAAKsC,SAAS,CAAC3C,MAAO,OAVTqD,EAAAA,GAAG,KAahCnD,KC3IasD,EAAqB,IAAIC,EAAAA,eAAiC,oBCpBjEC,EAAkC,CACtCR,IAAK,EACLD,IAAK,IACLM,MAAO,IACP7B,aAAc,EACdyB,aAAc,IACdQ,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,SAAS,EACTC,KAAM,SACNC,MAAO,UACPC,UAAW,OACXC,gBAAiB,QACjBzB,YAAa,SAAC3D,GACZ,OAAS,GAALA,GAAUA,EAAI,GAAW,GACpB,IAALA,GAAWA,EAAI,GAAW,EACrB,IAALA,GAAWA,EAAI,GAAW,EACrB,IAALA,GAAWA,EAAI,GAAW,GACvB,IAIXqF,EAAA,WAWE,SAAAA,EAAoDjD,GALnCZ,KAAA8D,WAAa,IAAIC,IAMhC/D,KAAKY,OAASA,EAAM1C,EAAA,GAAOkF,EAAkBxC,GAAUwC,SAQzDS,EAAAjF,UAAAoF,IAAA,SAAIC,EAAarD,GACf,QADE,IAAAqD,IAAAA,EAAA,QACEjE,KAAK8D,WAAWI,IAAID,GAAK,KAErBE,EAAcnE,KAAK8D,WAAWM,IAAIH,GAIxC,OAHIrD,GACFuD,EAAY5B,UAASrE,EAAA,GAAK8B,KAAKY,OAAWA,IAErCuD,EAGDA,EAAc,IAAIvE,EAAa1B,EAAA,GAAK8B,KAAKY,OAAWA,GAASZ,KAAKqE,eAAeJ,IACvF,OAAOjE,KAAK8D,WAAW1B,IAAI6B,EAAIE,GAAaC,IAAIH,IAOpDJ,EAAAjF,UAAA0F,WAAA,WACEtE,KAAK8D,WAAWS,QAAO,SAAEP,GAAuB,OAAAA,EAAIxB,aAM9CqB,EAAAjF,UAAAyF,eAAR,SAAuBJ,GAAvB,IAAAlE,EAAAC,KACE,OAAA,WACED,EAAK+D,WAAWU,UAAOP,yBA/C5BQ,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,gFAUCC,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAMJ,KAAA,CAACxB,4HAXlC,GC3BA6B,EAAA,WAyFE,SAAAA,EAAoBC,GAAAhF,KAAAgF,YAAAA,EAlCZhF,KAAAiF,SAA6B7E,EAAAA,aAAaC,MAC1CL,KAAAkF,WAA+B9E,EAAAA,aAAaC,MAS3CL,KAAAiE,GAAK,OAGLjE,KAAA4C,IAAc5C,KAAKgF,YAAYpE,OAAOgC,IACtC5C,KAAA2C,IAAc3C,KAAKgF,YAAYpE,OAAO+B,IACtC3C,KAAAyD,KAAezD,KAAKgF,YAAYpE,OAAO6C,KACvCzD,KAAA0D,MAAgB1D,KAAKgF,YAAYpE,OAAO8C,MACxC1D,KAAAiD,MAAgBjD,KAAKgF,YAAYpE,OAAOqC,MACxCjD,KAAAuD,MAAiBvD,KAAKgF,YAAYpE,OAAO2C,MACzCvD,KAAAqD,MAAiBrD,KAAKgF,YAAYpE,OAAOyC,MACzCrD,KAAAsD,OAAkBtD,KAAKgF,YAAYpE,OAAO0C,OAC1CtD,KAAAwD,QAAmBxD,KAAKgF,YAAYpE,OAAO4C,QAC3CxD,KAAA6C,aAAuB7C,KAAKgF,YAAYpE,OAAOiC,aAC/C7C,KAAAoB,aAAuBpB,KAAKgF,YAAYpE,OAAOQ,aAC/CpB,KAAAmC,YAAqCnC,KAAKgF,YAAYpE,OAAOuB,YAC7DnC,KAAA4D,gBAAoC5D,KAAKgF,YAAYpE,OAAOgD,gBAC5D5D,KAAA2D,UAA+C3D,KAAKgF,YAAYpE,OAAO+C,UACtE3D,KAAAmF,QAAU,IAAIC,EAAAA,aACdpF,KAAAqF,UAAY,IAAID,EAAAA,aAyE5B,OAvEEjH,OAAAsD,eAAIsD,EAAAnG,UAAA,YAAS,KAAb,WACE,OAAOoB,KAAKmE,YAAYjC,2CAM1B6C,EAAAnG,UAAA0G,YAAA,WACMtF,KAAKmE,uBAAuBvE,GAE9BI,KAAKmE,YAAY5B,UAAU,CACzBI,IAAiB,EAAX3C,KAAK2C,KAAW3C,KAAK2C,KAAO,IAAO3C,KAAK2C,IAAM,IACpDC,IAAM5C,KAAK4C,IAAM,KAAmB,GAAZ5C,KAAK4C,IAAY5C,KAAK4C,IAAM,EACpDK,MAAOjD,KAAKiD,MACZJ,aAAc7C,KAAK6C,aACnBV,YAAanC,KAAKmC,YAClBf,aAAcpB,KAAKoB,gBAKzB2D,EAAAnG,UAAA2G,SAAA,WAAA,IAAAxF,EAAAC,KAEEA,KAAKmE,YAAcnE,KAAKgF,YAAYhB,IAAIhE,KAAKiE,GAAI,CAC/CtB,IAAK3C,KAAK2C,IACVC,IAAK5C,KAAK4C,IACVK,MAAOjD,KAAKiD,MACZJ,aAAc7C,KAAK6C,aACnBzB,aAAcpB,KAAKoB,eAIrBpB,KAAKwF,OAASxF,KAAKmE,YAAYzD,MAAMI,KACnCa,EAAAA,IAAG,SAAEjB,GAA2B,MAAA,CAC9BF,OAAQE,EAAMF,OACdiF,UAAW,eAAe/E,EAAMhB,MAAK,aAKrCM,KAAKmF,QAAQO,UAAUhH,SACzBsB,KAAKiF,SAAWjF,KAAKmE,YAAYgB,QAAQ3D,UAAS,WAAO,OAAAzB,EAAKoF,QAAQQ,UAEpE3F,KAAKqF,UAAUK,UAAUhH,SAC3BsB,KAAKkF,WAAalF,KAAKmE,YAAYkB,UAAU7D,UAAS,WAAO,OAAAzB,EAAKsF,UAAUM,WAIhFZ,EAAAnG,UAAAgH,YAAA,WACE5F,KAAKiF,SAASxC,cACdzC,KAAKkF,WAAWzC,cACZzC,KAAKmE,uBAAuBvE,GAC9BI,KAAKmE,YAAY3B,WAIrBuC,EAAAnG,UAAAsC,MAAA,WACElB,KAAKmE,YAAYjD,SAGnB6D,EAAAnG,UAAAmD,SAAA,WACE/B,KAAKmE,YAAYpC,YAGnBgD,EAAAnG,UAAAoD,IAAA,SAAIxD,GACFwB,KAAKmE,YAAYnC,IAAIxD,IAGvBuG,EAAAnG,UAAAwD,IAAA,SAAI5D,GACFwB,KAAKmE,YAAY/B,IAAI5D,wBAzIxBqH,EAAAA,UAASnB,KAAA,CAAC,CACToB,SAAU,cACVC,KAAM,CACJC,KAAQ,cACRC,yBAA0B,kBAC1BC,aAAc,YACdC,eAAgB,QAChBC,eAAgB,SAElBC,SAAU,23BAsBVC,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,qBAAqB,k2FArCd/C,iCAoDNgD,EAAAA,mBAGAA,EAAAA,mBACAA,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,2BACAA,EAAAA,+BACAA,EAAAA,yBACAA,EAAAA,uBACAC,EAAAA,0BACAA,EAAAA,UAyEH/B,EA5JA,GCAAgC,EAAA,WAKA,SAAAA,KAcA,OARSA,EAAAC,WAAP,SAAkBpG,GAChB,MAAO,CACLqG,SAAUF,EACVG,UAAW,CACT,CAACC,QAASjE,EAAoBkE,SAAUxG,0BAV/CyG,EAAAA,SAAQ3C,KAAA,CAAC,CACR4C,aAAc,CAACvC,GACfwC,QAAS,CAACxC,GACVyC,QAAS,CAACC,EAAAA,kBAWZV,EAnBA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { Observable, Subject, BehaviorSubject, timer, of, combineLatest, Subscription } from 'rxjs';\r\nimport { tap, map, skip, delay, filter, debounce, switchMap, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nexport class NgProgressRef {\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  private readonly _state: BehaviorSubject<NgProgressState>;\r\n  state: Observable<NgProgressState>;\r\n\r\n  /** Stream that emits when config is changed */\r\n  private readonly _config: BehaviorSubject<NgProgressConfig>;\r\n  config: Observable<NgProgressState>;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private readonly _trickling = new Subject();\r\n\r\n  /** Stream that combines \"_trickling\" and \"config\" streams */\r\n  private readonly _worker = Subscription.EMPTY;\r\n\r\n  /** Get current progress state */\r\n  private get currState(): NgProgressState {\r\n    return this._state.value;\r\n  }\r\n\r\n  /** Check if progress has started */\r\n  get isStarted(): boolean {\r\n    return this.currState.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this._state.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(customConfig: NgProgressConfig, private _onDestroyCallback: Function) {\r\n    this._state = new BehaviorSubject<NgProgressState>({active: false, value: 0});\r\n    this._config = new BehaviorSubject<NgProgressConfig>(customConfig);\r\n    this.state = this._state.asObservable();\r\n    this.config = this._state.asObservable();\r\n\r\n    this._worker = combineLatest(this._trickling, this._config).pipe(\r\n      debounce(([start, config]: [boolean, NgProgressConfig]) => timer(start ? config.debounceTime : 0)),\r\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this.onTrickling(config) : this.onComplete(config))\r\n    ).subscribe();\r\n  }\r\n\r\n  /**\r\n   * Start the progress\r\n   */\r\n  start() {\r\n    this._trickling.next(true);\r\n  }\r\n\r\n  /**\r\n   * Complete the progress\r\n   */\r\n  complete() {\r\n    this._trickling.next(false);\r\n  }\r\n\r\n  /**\r\n   * Increment the progress\r\n   * @param amount\r\n   */\r\n  inc(amount?: number) {\r\n    const n = this.currState.value;\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        amount = this._config.value.trickleFunc(n);\r\n      }\r\n      this.set(n + amount);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the progress\r\n   * @param n\r\n   */\r\n  set(n: number) {\r\n    this.setState({value: this.clamp(n), active: true});\r\n  }\r\n\r\n  /**\r\n   * Set config\r\n   * @param config\r\n   */\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config.next({...this._config.value, ...config});\r\n  }\r\n\r\n  /**\r\n   * Destroy progress reference\r\n   */\r\n  destroy() {\r\n    this._worker.unsubscribe();\r\n    this._trickling.complete();\r\n    this._state.complete();\r\n    this._config.complete();\r\n    this._onDestroyCallback();\r\n  }\r\n\r\n  /**\r\n   * Set progress state\r\n   * @param state\r\n   */\r\n  private setState(state: NgProgressState) {\r\n    this._state.next({...this.currState, ...state});\r\n  }\r\n\r\n  /**\r\n   * Clamps a value to be between min and max\r\n   * @param n\r\n   */\r\n  private clamp(n: number): number {\r\n    return Math.max(this._config.value.min, Math.min(this._config.value.max, n));\r\n  }\r\n\r\n  /**\r\n   * Keeps incrementing the progress\r\n   * @param config\r\n   */\r\n  private onTrickling(config: NgProgressConfig): Observable<number> {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.value.min);\r\n    }\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /**\r\n   * Completes then resets the progress\r\n   * @param config\r\n   */\r\n  private onComplete(config: NgProgressConfig): Observable<any> {\r\n    return !this.isStarted ? of({}) : of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this.setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this.setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this.setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport interface NgProgressState {\r\n  active?: boolean;\r\n  value?: number;\r\n}\r\n\r\nexport interface NgProgressConfig {\r\n  spinnerPosition?: 'left' | 'right';\r\n  direction?: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-';\r\n  ease?: string;\r\n  color?: string;\r\n  thick?: boolean;\r\n  fixed?: boolean;\r\n  meteor?: boolean;\r\n  spinner?: boolean;\r\n  max?: number;\r\n  min?: number;\r\n  speed?: number;\r\n  trickleSpeed?: number;\r\n  trickleFunc?: (n: number) => number;\r\n  debounceTime?: number;\r\n}\r\n\r\nexport const NG_PROGRESS_CONFIG = new InjectionToken<NgProgressConfig>('ngProgressConfig');\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  min: 8,\r\n  max: 100,\r\n  speed: 200,\r\n  debounceTime: 0,\r\n  trickleSpeed: 300,\r\n  fixed: true,\r\n  meteor: true,\r\n  thick: false,\r\n  spinner: true,\r\n  ease: 'linear',\r\n  color: '#1B95E0',\r\n  direction: 'ltr+',\r\n  spinnerPosition: 'right',\r\n  trickleFunc: (n: number): number => {\r\n    if (n >= 0 && n < 20) return 10;\r\n    if (n >= 20 && n < 50) return 4;\r\n    if (n >= 50 && n < 80) return 2;\r\n    if (n >= 80 && n < 99) return 0.5;\r\n    return 0;\r\n  }\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgProgress {\r\n\r\n  /** Store progress bar instances */\r\n  private readonly _instances = new Map<string, NgProgressRef>();\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(NG_PROGRESS_CONFIG) config: NgProgressConfig) {\r\n    this.config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Get or Create progress bar by ID\r\n   * @param id\r\n   * @param config\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances.has(id)) {\r\n      // Get ProgressRef instance\r\n      const progressRef = this._instances.get(id);\r\n      if (config) {\r\n        progressRef.setConfig({...this.config, ...config});\r\n      }\r\n      return progressRef;\r\n    } else {\r\n      // Create new ProgressRef instance\r\n      const progressRef = new NgProgressRef({...this.config, ...config}, this.deleteInstance(id));\r\n      return this._instances.set(id, progressRef).get(id);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroy all progress bar instances\r\n   */\r\n  destroyAll() {\r\n    this._instances.forEach((ref: NgProgressRef) => ref.destroy());\r\n  }\r\n\r\n  /**\r\n   * A destroyer function for each progress bar instance\r\n   */\r\n  private deleteInstance(id: string) {\r\n    return () => {\r\n      this._instances.delete(id);\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, SubscriptionLike} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick',\r\n    '[attr.fixed]': 'fixed'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styleUrls: ['./ng-progress.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started: SubscriptionLike = Subscription.EMPTY;\r\n  private _completed: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Stream that emits progress state */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() fixed: boolean = this._ngProgress.config.fixed;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\r\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when inputs change\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n        trickleFunc: this.trickleFunc,\r\n        debounceTime: this.debounceTime\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n      debounceTime: this.debounceTime\r\n    });\r\n\r\n    // Subscribe to progress state\r\n    this.state$ = this.progressRef.state.pipe(\r\n      map((state: NgProgressState) => ({\r\n        active: state.active,\r\n        transform: `translate3d(${state.value}%,0,0)`\r\n      }))\r\n    );\r\n\r\n    // Subscribes to started and completed events on deman\r\n    if (this.started.observers.length) {\r\n      this._started = this.progressRef.started.subscribe(() => this.started.emit());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._started.unsubscribe();\r\n    this._completed.unsubscribe();\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      this.progressRef.destroy();\r\n    }\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgressConfig, NG_PROGRESS_CONFIG } from './ng-progress.interface';\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static withConfig(config: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: NG_PROGRESS_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}